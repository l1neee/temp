// -- На форме элемента справочников (материалы и фурнитура)
&НаКлиенте
Процедура ЗагрузитьКартинку(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ОбработкаВыбораФайла", ЭтотОбъект);
	НачатьПомещениеФайла(Оповещение, , , Истина, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораФайла(Результат, Адрес, ВыбранноеИмяФайла, ДопПараметры) Экспорт
	
	Если НЕ(Результат) Тогда
		Сообщить("Вы не выбрали файл");
		Возврат;
	КонецЕсли;
	
	КартинкаНаФорме = Адрес;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЭтоАдресВременногоХранилища(КартинкаНаФорме) Тогда
		ТекущийОбъект.Картинка = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(КартинкаНаФорме));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КартинкаНаФорме = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "Картинка");
	
КонецПроцедуры


-----------------------------------------------------------------------------------------------------------------------


// -- На форму списка справочников (материалы и фурнитур)
&НаСервере
Процедура ЗагрузитьДанныеНаСервере(Результат, ДопПараметры) Экспорт
	
	Если НЕ(Результат = Неопределено) Тогда
		СсылкаНаФайл = Результат[0];
	Иначе
		Сообщить("Вы не выбрали файл");
		Возврат;
	КонецЕсли;
	
	// Обращение к данным Excek таблицы
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Прочитать(СсылкаНаФайл);
	
	// Чтение данных Excel таблицы
	Для Строка = 2 По ТабДок.ВысотаТаблицы Цикл
		ЭлементМатериал = Справочники.Материалы.СоздатьЭлемент();
		
		// Артикул, Наименование, Длина, Количество, Цена
		ЭлементМатериал.Код = ТабДок.Область(Строка, 1).Текст;
		ЭлементМатериал.Наименование = ТабДок.Область(Строка, 2).Текст;
		ЭлементМатериал.Длина = ТабДок.Область(Строка, 4).Текст;
		ЭлементМатериал.Количество = ТабДок.Область(Строка, 5).Текст;
		ЭлементМатериал.Цена = ТабДок.Область(Строка, 7).Текст;
		
		// Единицы измерения
		ЕдИзмТабл = ТабДок.Область(Строка, 3).Текст;
		Если Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(ЕдИзмТабл, Истина) = Справочники.ЕдиницыИзмерения.ПустаяСсылка() Тогда
			ЭлементЕдИзм = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
			ЭлементЕдИзм.Наименование = ЕдИзмТабл;
			ЭлементЕдИзм.Записать();
			
			Сообщить("В справочник Единицы измерения добавлена запись " + ЭлементЕдИзм.Наименование);
		КонецЕсли;
		ЭлементМатериал.ЕдИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(ЕдИзмТабл, Истина);
		
		// Тип материала
		ТипМатТабл = ТабДок.Область(Строка, 6).Текст;
		Если Справочники.ТипыМатериалов.НайтиПоНаименованию(ТипМатТабл, Истина) = Справочники.ТипыМатериалов.ПустаяСсылка() Тогда
			ЭлементТипМат = Справочники.ТипыМатериалов.СоздатьЭлемент();
			ЭлементТипМат.Наименование = ТипМатТабл;
			ЭлементТипМат.Записать();
			
			Сообщить("В справочник Типы материалов добавлена запись " + ЭлементТипМат.Наименование);
		КонецЕсли;
		ЭлементМатериал.ТипМатериала = Справочники.ТипыМатериалов.НайтиПоНаименованию(ТипМатТабл, Истина);
		
		ЭлементМатериал.Записать();
		Сообщить("В справочник Материалы добавлена запись " + ЭлементМатериал.Наименование);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ВыборФайла.МножественныйВыбор = Ложь;
	ВыборФайла.Фильтр = "Текстовый документ *.xlsx | *.xlsx";
	ВыборФайла.Показать(Новый ОписаниеОповещения("ЗагрузитьДанныеНаСервере", ЭтотОбъект, Новый Структура)); 

КонецПроцедуры


// -- Отбор и получение итогов
&НаКлиенте
Процедура ОтборПоКатегорииПриИзменении(Элемент)
	
	Список.Отбор.Элементы.Очистить();
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КатегорияКачества");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;	
	ЭлементОтбора.ПравоеЗначение = ОтборПоКатегории;
	
	ПолучитьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)
	
	Список.Отбор.Элементы.Очистить();
	ОтборПоКатегории = "";
	
	ПолучитьИтоги();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьИтоги()
	
	Если НЕ(ОтборПоКатегории.Пустая()) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(Материалы.Количество) КАК Количество,
		|	СУММА(Материалы.ЗакупочнаяСтоимость) КАК ЗакупочнаяСтоимость,
		|	КОЛИЧЕСТВО(Материалы.Код) КАК ВыведеноПозиций
		|ИЗ
		|	Справочник.Материалы КАК Материалы
		|ГДЕ
		|	Материалы.КатегорияКачества = &КатегорияКачества";
		Запрос.УстановитьПараметр("КатегорияКачества", ОтборПоКатегории);
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		ВыведеноПозиций = РезультатЗапроса[0].ВыведеноПозиций;
		ВсегоМатериалов = РезультатЗапроса[0].Количество;
		ЗакупочнаяСтоимость = РезультатЗапроса[0].ЗакупочнаяСтоимость;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(Материалы.Количество) КАК Количество,
		|	СУММА(Материалы.ЗакупочнаяСтоимость) КАК ЗакупочнаяСтоимость,
		|	КОЛИЧЕСТВО(Материалы.Код) КАК ВыведеноПозиций
		|ИЗ
		|	Справочник.Материалы КАК Материалы";
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		ВыведеноПозиций = РезультатЗапроса[0].ВыведеноПозиций;
		ВсегоМатериалов = РезультатЗапроса[0].Количество;
		ЗакупочнаяСтоимость = РезультатЗапроса[0].ЗакупочнаяСтоимость;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПолучитьИтоги();
	
КонецПроцедуры


-----------------------------------------------------------------------------------------------------------------------


// -- На форме списка справочника Изделие
&НаКлиенте
Процедура ОткрытьСпецификацию(Команда)
	
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Док = ВернутьСпецификацию(ТекСтрока.Ссылка);
		ПараметрыФормы = Новый Структура("Ключ", Док);
		ПараметрыФормы.Вставить("Изделие", ТекСтрока.Ссылка);
		ОткрытьФорму("Документ.СпецификацияНаИзделие.ФормаОбъекта", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	Иначе
		Сообщить("Нужно выбрать товар из списка, на который нужно найти спецификацию");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьСпецификацию(Изделие)
	Возврат Документы.СпецификацияНаИзделие.НайтиПоРеквизиту("Изделие", Изделие);
КонецФункции


-----------------------------------------------------------------------------------------------------------------------


// -- На форму документа СпецификацияНаИзделие
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ(ЗначениеЗаполнено(Объект.Изделие)) И Параметры.Свойство("Изделие") Тогда
		Объект.Изделие = Параметры.Изделие;
	КонецЕсли;
	
КонецПроцедуры


-----------------------------------------------------------------------------------------------------------------------


// -- На модуль объекта документа Сборка
Процедура ОбработкаПроведения(Отказ, Режим)
	
	БлокировкаДанных = Новый БлокировкаДанных;
	
	// Выбрать пространство блокировок РегистрНакопления.ОстаткиНоменклатуры, т.к. мы собираемся анализировать
	// остатки регистра
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.ОстаткиМатериаловИФурнитуры");
	
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	// Заблокировать «записи» со значениями номенклатуры из табличной части, соответствующими условию
	// ...  РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.Услуга = ЛОЖЬ ...
	// эти данные необходимо получить запросом к табличной части
	ЗапросИсточник = Новый Запрос;
	ЗапросИсточник.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                       |	СборкаСоставИзделия.Наименование КАК Номенклатура
	                       |ИЗ
	                       |	Документ.Сборка.СоставИзделия КАК СборкаСоставИзделия
	                       |ГДЕ
	                       |	СборкаСоставИзделия.Ссылка = &Ссылка";
	ЗапросИсточник.УстановитьПараметр("Ссылка", Ссылка);					  
	ИсточникНоменклатуры = ЗапросИсточник.Выполнить();
	
	ЭлементБлокировки.ИсточникДанных = ИсточникНоменклатуры; 
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	БлокировкаДанных.Заблокировать();
	
	
	// регистр ОстаткиМатериаловИФурнитуры Расход
	Движения.ОстаткиМатериаловИФурнитуры.Записывать = Истина;
	Для Каждого ТекСтрокаСоставИзделия Из СоставИзделия Цикл
		Движение = Движения.ОстаткиМатериаловИФурнитуры.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаСоставИзделия.Наименование;
		Движение.Количество = ТекСтрокаСоставИзделия.Количество;
	КонецЦикла;
	Движения.Записать();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОстаткиМатериаловИФурнитурыОстатки.Номенклатура КАК Номенклатура,
	               |	ОстаткиМатериаловИФурнитурыОстатки.КоличествоОстаток КАК КоличествоОстаток
	               |ИЗ
	               |	РегистрНакопления.ОстаткиМатериаловИФурнитуры.Остатки КАК ОстаткиМатериаловИФурнитурыОстатки
	               |ГДЕ
	               |	ОстаткиМатериаловИФурнитурыОстатки.КоличествоОстаток < 0
	               |	И ОстаткиМатериаловИФурнитурыОстатки.Номенклатура В(&СоставИзделия)";
	Запрос.УстановитьПараметр("СоставИзделия", СоставИзделия.ВыгрузитьКолонку("Наименование"));
	Выборка = Запрос.Выполнить().Выбрать();
	СообщениеПользователю = "";
	Пока Выборка.Следующий() Цикл
		Отказ = Истина;
		СообщениеПользователю = СообщениеПользователю + "Не хватает " + Выборка.Номенклатура + " в количестве " + Строка(-Выборка.КоличествоОстаток) + Символы.ПС;
	КонецЦикла;
	
	Если Отказ Тогда
		Сообщить(Лев(СообщениеПользователю, СтрДлина(СообщениеПользователю)-1));
	КонецЕсли;
	
КонецПроцедуры


-----------------------------------------------------------------------------------------------------------------------


// -- На модуль объекта документа Заказ
Процедура ПриЗаписи(Отказ)
	
	МенеджерЗаписи = РегистрыСведений.ИсторияСтатусовЗаказа.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Заказ = Ссылка;
	МенеджерЗаписи.Дата = ТекущаяДата();
	МенеджерЗаписи.Статус = СтатусЗаказа;
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры


-----------------------------------------------------------------------------------------------------------------------


// Открываем базу для запуска тестирования
СтрокаЗапуска = КаталогПрограммы() + "1cv8.exe ENTEPRISE /F " + ПутьКБазе;
СтрокаЗапуска = СтрокаЗапуска + " /TESTCLIENT -Tport 1550";
ЗапуститьСистему(СтрокаЗапуска);